{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/components.module.ts","webpack:///src/app/components/pokecard/pokecard.component.ts","webpack:///src/app/components/pokecard/pokecard.component.html","webpack:///src/app/components/pokesearchbar/pokeseachbar.component.ts","webpack:///src/app/components/pokesearchbar/pokeseachbar.component.html","webpack:///src/app/components/poketoolbar/poketoolbar.component.ts","webpack:///src/app/components/poketoolbar/poketoolbar.component.html","webpack:///src/app/modules/material/material.module.ts","webpack:///src/app/pages/pokemon-storage/pokemon-storage.component.ts","webpack:///src/app/pages/pokemon-storage/pokemon-storage.component.html","webpack:///src/app/services/loading/interceptor.service.ts","webpack:///src/app/services/loading/loading.service.ts","webpack:///src/app/services/pokemon/pokemon.service.ts","webpack:///src/app/services/translations/translation.service.ts","webpack:///src/assets/i18n/en.ts","webpack:///src/assets/i18n/pt.ts","webpack:///src/assets/i18n/translations/paginator/paginator-defines.pt.ts","webpack:///src/assets/i18n/translations/poke-card/poke-card.en.ts","webpack:///src/assets/i18n/translations/poke-card/poke-card.pt.ts","webpack:///src/assets/i18n/translations/poke-storage/poke-storage.en.ts","webpack:///src/assets/i18n/translations/poke-storage/poke-storage.á¹•t.ts","webpack:///src/assets/i18n/translations/poke-toolbar/poke-toolbar.en.ts","webpack:///src/assets/i18n/translations/poke-toolbar/poke-toolbar.pt.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","translate","initLocation","selector","template","AppModule","declarations","providers","bootstrap","views","ComponentsModule","provide","useClass","multi","PokeCardComponent","pokeService","init","pokemonDetails$","subscribe","details","name","imageUrl","sprites","front_default","order","mainSkill","abilities","ability","getSpecies","species","url","specie","color","egg_groups","map","egg","getDetails","toString","toLowerCase","styleUrls","templateUrl","PokeSearchBarComponent","nameSubmitted","console","log","value","emit","emitName","styles","PokeToolbarComponent","isVisible","language","use","modules","MaterialModule","PokemonStorageComponent","translation","pageOptions","results","getAll","pokemonResponse","count","nextUrl","next","previousUrl","previous","limit","get","paginator","_intl","itemsPerPageLabel","getByName","event","previousPageIndex","pageIndex","changePage","response","searchPokemon","LoadingInterceptorService","loadingScreenService","activeRequests","request","startLoading","handle","pipe","stopLoading","providedIn","LoadingService","loading$","PokemonService","http","pageNumber","urlBase","locales","PokemonTranslationService","translateService","addLangs","setDefaultLang","forEach","locale","setTranslation","lang","window","localStorage","setItem","EN_US","card","toolBar","storage","PT_BR","toolbar","PAGINATOR","ITEMS_PER_PAGE_LABEL","NEXT_PAGE_LABEL","PREVIOUS_PAGE_LABEL","FIRST_PAGE_LABEL","LAST_PAGE_LABEL","RANGE_PAGE_LABEL_1","RANGE_PAGE_LABEL_2","cardEn","skillLabel","speciesLabel","cardPt","storageEN","copyRightsPrimary","copyRightsSecond","searchInput","storagePT","toolbarEn","title","subtitle","toolbarPt","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { PokemonStorageComponent } from './pages/pokemon-storage/pokemon-storage.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PokemonStorageComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { PokemonTranslationService } \n  from './services/translations/translation.service';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private translate: PokemonTranslationService\n  ) {}\n  \n  ngOnInit() {\n    this.translate.initLocation();\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './modules/material/material.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ComponentsModule } from './components/components.module';\nimport {TranslateModule } from '@ngx-translate/core';\nimport { PokemonStorageComponent } from './pages/pokemon-storage/pokemon-storage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PokemonStorageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    ComponentsModule,\n    TranslateModule.forRoot({}),\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { MaterialModule } from 'src/app/modules/material/material.module';\nimport { CommonModule } from '@angular/common';\nimport { PokeCardComponent } from './pokecard/pokecard.component';\nimport { PokeToolbarComponent } from './poketoolbar/poketoolbar.component';\nimport { PokeSearchBarComponent } from './pokesearchbar/pokeseachbar.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoadingInterceptorService } from '../services/loading/interceptor.service';\n\nconst views = [\n  PokeCardComponent,\n  PokeToolbarComponent,\n  PokeSearchBarComponent\n]\n\n@NgModule({\n  declarations: [\n    ...views\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    ...views\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingInterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class ComponentsModule {}","import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PokemonService } from 'src/app/services/pokemon/pokemon.service';\nimport { Observable } from 'rxjs';\nimport { PokemonDetails } from 'src/app/services/pokemon/details.interface';\nimport { PokemonSpeciesInterface } from 'src/app/services/pokemon/specie.interface';\nimport { PokeCardInterface } from './pokecard.interface';\n\n@Component({\n  selector: 'poke-card-component',\n  styleUrls: ['./pokecard.component.scss'],\n  templateUrl: './pokecard.component.html'\n})\nexport class PokeCardComponent implements OnInit{\n  @Input() url: string;\n\n  pokemonDetails$: Observable<PokemonDetails>;\n\n  name: string;\n  imageUrl: string;\n  color: string;\n  order: number;\n  species: string[];\n  mainSkill: string;\n\n  constructor(\n    private pokeService: PokemonService  \n  ) {}\n\n  ngOnInit(): void {\n    this.init();\n    this.pokemonDetails$.subscribe(details => {\n      this.name = details.name\n      this.imageUrl = details.sprites.front_default\n      this.order = details.order\n      this.mainSkill = details.abilities[0].ability.name\n      this.pokeService.getSpecies(details.species.url)\n        .subscribe(specie => {\n          this.color = specie.color.name\n          this.species = specie.egg_groups.map(egg => egg.name)\n      });\n    });\n  }\n\n  init() {\n    this.pokemonDetails$ = this.pokeService.getDetails(this.url);\n  }\n\n  get backgroundColor() {\n    if(this.color)\n      return `poke-card-background-${this.color.toString().toLowerCase()}`;\n  }\n}","<mat-card matRipple\n  class=\"poke-card\"\n  [class]=\"backgroundColor\">\n  <mat-progress-spinner class=\"poke-card-progressbar\"\n    *ngIf=\"!imageUrl\" \n    [mode]=\"'indeterminate'\">\n  </mat-progress-spinner>\n  <div class=\"poke-card-header\"> \n    <span class=\"poke-card-header-name\">\n      {{ name | titlecase }}\n    </span>\n    <span class=\"poke-card-header-number\">\n      <span>#</span>{{ order | number: '3.0-9'}}\n    </span>\n  </div>\n  <div class=\"poke-card-image\">\n    <img [src]=\"imageUrl\">\n  </div>\n  <div class=\"poke-card-foot\">\n    <div class=\"poke-card-foot-container\">\n      <p class=\"poke-card-foot-container-description\">\n        <span class=\"poke-card-foot-container-description-title\">\n          {{'card.skillLabel' | translate}} \n        </span>\n        <span>{{ mainSkill }}</span>\n      </p>\n      <div class=\"poke-card-foot-container-mat-icon\">\n        <mat-chip-list  \n          *ngFor=\"let specie of species\">\n          <mat-chip>{{ specie | uppercase }}</mat-chip>\n        </mat-chip-list>\n      </div>\n    </div>\n  </div>\n</mat-card>","import { Component, EventEmitter } from \"@angular/core\";\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'poke-search-bar',\n  templateUrl: './pokeseachbar.component.html',\n  styles: ['./pokeseachbar.component.scss']\n})\nexport class PokeSearchBarComponent {\n  name = new FormControl('');\n  nameSubmitted = new EventEmitter<string>();\n  \n  emitName() {\n    console.log(this.name.value)\n    this.nameSubmitted.emit(this.name.value)\n  }\n}","<div class=\"pokemon-list-search_bar_initial\">\n  <form class=\"pokemon-list-search_bar_initial-form\">\n    <mat-form-field \n      class=\"pokemon-list-search_bar_initial-form-field\">\n      <mat-label>\n        <span>Pokemon.lib</span>\n      </mat-label>\n      <input matInput \n        placeholder=\"Ex.: 'Picachu'\"\n        [formControl]=\"name\"\n        (keyup)=\"emitName()\">\n    </mat-form-field>\n  </form>\n</div> \n","import { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PokemonTranslationService } from 'src/app/services/translations/translation.service';\n\n@Component({\n  selector: 'poke-toolbar',\n  templateUrl: './poketoolbar.component.html',\n  styleUrls: ['./poketoolbar.component.scss']\n})\nexport class PokeToolbarComponent {\n  @Input() isVisible: boolean = true;\n\n  constructor(private translate: TranslateService) {}\n\n  setLanguage(language: string) {\n    this.translate.use(language)\n  }\n}","<mat-toolbar \n  *ngIf=\"isVisible\"\n  class=\"poketoolbar-toolbar\">\n  <div>\n    <span class=\"poketoolbar-toolbar-firstWorld\">\n      {{ 'toolbar.title' | translate }}\n    </span>\n    <span class=\"poketoolbar-toolbar-secondWorld\">\n      {{ 'toolbar.subtitle' | translate }}\n    </span>\n  </div>\n  <div class=\"poketoolbar-toolbar-options\">\n    <mat-button-toggle-group \n      class=\"poketoolbar-toolbar-options-button\">\n      <mat-button-toggle (click)=\"setLanguage('en')\">\n        <img src=\"../../../assets/images/logos/united_kingdom.png\" alt=\"english\">\n      </mat-button-toggle>\n      <mat-button-toggle (click)=\"setLanguage('pt')\">\n        <img src=\"../../../assets/images/logos/brazil.png\" alt=\"brazil\">\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n</mat-toolbar>","import { NgModule } from \"@angular/core\";\nimport { MatInputModule } from '@angular/material/input';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nconst modules = [\n\tMatInputModule,\n\tMatToolbarModule,\n\tMatCardModule,\n\tMatChipsModule,\n\tMatRippleModule,\n\tMatProgressSpinnerModule,\n\tMatPaginatorModule,\n\tMatButtonToggleModule,\n\tMatTooltipModule,\n\tMatProgressBarModule,\n]\n\n@NgModule({\n\timports:[...modules],\n\texports: [...modules]\n})\nexport class MaterialModule { }","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PokemonService } from 'src/app/services/pokemon/pokemon.service';\nimport { Result } from 'src/app/services/pokemon/pokemon-api.interface';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-pokemon-storage',\n  templateUrl: './pokemon-storage.component.html',\n  styleUrls: ['./pokemon-storage.component.scss'],\n})\nexport class PokemonStorageComponent implements OnInit {\n\n  previousUrl: string;\n  nextUrl: string;\n  \n  count: number;\n  limit: number;\n  index: number;\n  pageOptions = [1, 2, 5];\n\n  results: Array<Result> = [];\n\n  defaultLang: string;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private pokeService: PokemonService,\n    private translation: TranslateService\n  ) { }\n\n  ngOnInit(): void {\n    \n    this.pokeService.getAll().subscribe(pokemonResponse => {\n      this.count = pokemonResponse.count,\n      this.results = pokemonResponse.results,\n      this.nextUrl = pokemonResponse.next,\n      this.previousUrl = pokemonResponse.previous\n    });\n    this.limit = this.pokeService.limit;\n  }\n\n  injectTranslationPagitator() {\n    this.translation.get('paginator.RANGE_PAGE_LABEL_2').subscribe(translation => {\n      this.paginator._intl.itemsPerPageLabel = translation\n   });\n  }\n\n  searchPokemon(name: string) {\n    this.pokeService.getByName(name).subscribe(pokemonResponse => {\n      this.count                  = pokemonResponse.count,\n      this.results                = pokemonResponse.results,\n      this.nextUrl                = pokemonResponse.next,\n      this.previousUrl            = pokemonResponse.previous\n    });\n  }\n\n  changePage(event: PageEvent) {\n    if (event.previousPageIndex < event.pageIndex)\n      this.next();\n    else if (event.previousPageIndex > event.pageIndex)\n      this.previous();\n  }\n\n  get isLoading() {\n    return !this.results;\n  }\n\n  next() {\n    this.pokeService.changePage(this.nextUrl).subscribe(response => {\n      this.count                  = response.count,\n      this.results                = response.results,\n      this.nextUrl                = response.next,\n      this.previousUrl            = response.previous\n    })\n  }\n\n  previous() {\n    this.pokeService.changePage(this.previousUrl).subscribe(response => {\n      this.count                  = response.count,\n      this.results                = response.results,\n      this.nextUrl                = response.next,\n      this.previousUrl            = response.previous\n    })\n  }\n}\n","<poke-toolbar></poke-toolbar>\n<main class=\"pokemon_storage\">\n  <div class=\"pokemon_storage-controllers\">\n    <mat-form-field class=\"pokemon_storage-controllers-input\">\n      <mat-label>{{'storage.searchInput' | translate }}</mat-label>\n      <input #pokemonName disabled\n        matInput \n        placeholder=\"Ex. Jiglypuff\" \n        (keyup)=\"searchPokemon(pokemonName.value)\">\n    </mat-form-field>\n    <mat-paginator \n    (page)=\"changePage($event)\"\n    [hidePageSize]=\"true\"\n    [showFirstLastButtons]=\"false\"\n    [length]=\"count\"\n    [pageIndex]=\"index\"\n    [pageSize]=\"limit\"\n    [pageSizeOptions]=\"pageOptions\">\n    </mat-paginator> \n  </div> \n  <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n  <div class=\"pokemon_storage-card-panel\" *ngIf=\"results\">\n    <poke-card-component class=\"pokemon_storage-card-panel-item\"\n      *ngFor=\"let pokemon of results\"\n      [url]=\"pokemon.url\"\n      (nameSubmitted)=\"searchPokemon($event)\">\n    </poke-card-component>\n  </div>\n</main>\n<footer class=\"pokemon_storage-footer\">\n  <span>{{'storage.copyRightsPrimary' | translate }}&copy; {{ 'storage.copyRightsSecond' | translate}}</span>\n</footer>","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoadingService } from './loading.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingInterceptorService {\n\n  activeRequests: number = 0;\n\n    constructor(\n        private loadingScreenService: LoadingService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        if (this.activeRequests === 0) {\n            this.loadingScreenService.startLoading();\n        }\n\n        this.activeRequests++;\n\n        return next.handle(request).pipe(\n            finalize(() => {\n                this.activeRequests--;\n                if (this.activeRequests === 0) {\n                    this.loadingScreenService.stopLoading();\n                }\n            })\n        )\n    };\n}","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  loading$: Subject<boolean> = new Subject();\n\n  constructor() { }\n\n  startLoading() {\n    this.loading$.next(true);\n  }\n\n  stopLoading() {\n    this.loading$.next(false);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { PokemonListApiResponse, Result } from './pokemon-api.interface';\nimport { SpeciesReponse } from './species.interface';\nimport { PokemonDetails } from './details.interface';\nimport { PokemonSpeciesInterface } from './specie.interface';\n\n@Injectable({providedIn: 'root'})\nexport class PokemonService {\n\n  limit  = 12;\n  pageNumber = 0\n\n  constructor(private http: HttpClient) {}\n\n  getDetails(url: string) {\n    return this.http.get<PokemonDetails>(url);\n  }\n\n  getByName(name: string) {\n    return this.http\n      .get<PokemonListApiResponse>(`${environment.urlBase}/pokemon/${name}`);\n  }\n\n  changePage(url) {\n    return this.http.get<PokemonListApiResponse>(url);\n  }\n\n  getAll(): Observable<PokemonListApiResponse>{\n    return this.http.get<PokemonListApiResponse>\n      (`${environment.urlBase}/pokemon/?offset=${this.pageNumber}&limit=${this.limit}`);\n  }\n\n  getSpecies(url: string) {\n    return this.http.get<PokemonSpeciesInterface>(url);\n  }\n}","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PT_BR } from 'src/assets/i18n/pt';\nimport { EN_US } from 'src/assets/i18n/en';\n\n\nconst locales = [PT_BR, EN_US];\n\n@Injectable({providedIn: 'root'})\nexport class PokemonTranslationService {\n  constructor(private translateService: TranslateService) {}\n\n  initLocation() {\n    this.translateService.addLangs(['pt', 'en']);\n    this.translateService.setDefaultLang('pt');\n    this.translateService.use('pt');\n\n    locales.forEach( (locale) => {\n      this.translateService\n        .setTranslation(locale.language, locale.component, true);\n    });\n  }\n\n  setLang(lang) {\n    this.translateService.use(lang);\n    window.localStorage.setItem('lang', lang);\n  }\n}\n\n","import { cardEn } from \"./translations/poke-card/poke-card.en\";\nimport { toolbarEn } from './translations/poke-toolbar/poke-toolbar.en';\nimport { storageEN } from './translations/poke-storage/poke-storage.en';\nimport { PAGINATOR } from './translations/paginator/paginator-defines.pt';\n\nexport const EN_US = {\n  language: 'en',\n  component: {\n    card: cardEn,\n    toolBar: toolbarEn,\n    storage: storageEN,\n    paginator: PAGINATOR\n  }\n}","import { cardPt } from \"./translations/poke-card/poke-card.pt\";\nimport { toolbarPt } from './translations/poke-toolbar/poke-toolbar.pt';\nimport { storagePT } from './translations/poke-storage/poke-storage.á¹•t';\nimport { PAGINATOR } from './translations/paginator/paginator-defines.pt'; \n\nexport const PT_BR = {\n  language: 'pt',\n  component: {\n    card: cardPt,\n    toolbar: toolbarPt,\n    storage: storagePT,\n    paginator: PAGINATOR\n  }\n}","export const PAGINATOR = {\n  ITEMS_PER_PAGE_LABEL: \"Items por pÃ¡gina:\",\n  NEXT_PAGE_LABEL: \"prÃ³ximo\",\n  PREVIOUS_PAGE_LABEL: \"anterior\",\n  FIRST_PAGE_LABEL: \"primeira pÃ¡gina\",\n  LAST_PAGE_LABEL: \"Ãºltima pagina\",\n  RANGE_PAGE_LABEL_1: \"0 atÃ© {{length}}\",\n  RANGE_PAGE_LABEL_2: \"{{startIndex}} - {{endIndex}} atÃ© {{length}}\"\n}  ","export const cardEn = \n  {\n    skillLabel: 'Skill:',\n    speciesLabel: 'Species:'\n  }","export const cardPt = \n  {\n    skillLabel: 'Habilidade:',\n    speciesLabel: 'EspÃ©cies:'\n  }","export const storageEN = {\n  copyRightsPrimary: 'Developed by Lucas Nogueira',\n  copyRightsSecond: '2020 - Powered by github pages.',\n  searchInput: 'Find yours favorite pokemon:'\n}","export const storagePT = {\n  copyRightsPrimary: 'Desenvolvido por Lucas Nogueira',\n  copyRightsSecond: '2020 - Mantido pelo github pages.',\n  searchInput: 'Encontre seu pokemon favorito'\n}","export const toolbarEn = {\n  title: 'Pokedex',\n  subtitle: 'lib'\n}","export const toolbarPt = {\n  title: 'Pokedex',\n  subtitle: 'biblioteca'\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  urlBase: 'https://pokeapi.co/api/v2'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}